{"documentation.json":{"About this Documentation":{"p":"miscs.0","t":"misc"},"Stability Index":{"p":"miscs.0.miscs.0","t":"misc"},"JSON Output":{"p":"miscs.0.miscs.1","t":"misc"}},"synopsis.json":{"Synopsis":{"p":"miscs.0","t":"misc"}},"timers.json":{"Timers":{"p":"modules.0","t":"module"},"setTimeout(callback, delay, [arg], [...])":{"p":"modules.0.methods.0","t":"method"},"clearTimeout(timeoutId)":{"p":"modules.0.methods.1","t":"method"},"setInterval(callback, delay, [arg], [...])":{"p":"modules.0.methods.2","t":"method"},"clearInterval(intervalId)":{"p":"modules.0.methods.3","t":"method"}},"globals.json":{"global":{"p":"miscs.0.globals.0","t":"global"},"process":{"p":"miscs.0.globals.1","t":"global"},"console":{"p":"miscs.0.globals.2","t":"global"},"Class: Buffer":{"p":"miscs.0.globals.3","t":"global"},"clearInterval(t)":{"p":"miscs.0.globals.4","t":"global"},"require()":{"p":"miscs.0.vars.0","t":"var"},"require.resolve()":{"p":"miscs.0.vars.0.methods.0","t":"method"},"`cache` {Object} ":{"p":"miscs.0.vars.0.properties.0"},"`extensions` {Array} ":{"p":"miscs.0.vars.0.properties.1"},"__filename":{"p":"miscs.0.vars.1","t":"var"},"__dirname":{"p":"miscs.0.vars.2","t":"var"},"module":{"p":"miscs.0.vars.3","t":"var"},"exports":{"p":"miscs.0.vars.4","t":"var"},"setInterval(cb, ms)":{"p":"miscs.0.methods.0","t":"method"},"Global Objects":{"p":"miscs.0","t":"misc"}},"modules.json":{"Modules":{"p":"modules.0","t":"module"},"Cycles":{"p":"modules.0.miscs.0","t":"misc"},"Core Modules":{"p":"modules.0.miscs.1","t":"misc"},"File Modules":{"p":"modules.0.miscs.2","t":"misc"},"Loading from `node_modules` Folders":{"p":"modules.0.miscs.3","t":"misc"},"Folders as Modules":{"p":"modules.0.miscs.4","t":"misc"},"Caching":{"p":"modules.0.miscs.5","t":"misc"},"Module Caching Caveats":{"p":"modules.0.miscs.5.miscs.0","t":"misc"},"All Together...":{"p":"modules.0.miscs.6","t":"misc"},"Loading from the global folders":{"p":"modules.0.miscs.7","t":"misc"},"Accessing the main module":{"p":"modules.0.miscs.8","t":"misc"},"Addenda: Package Manager Tips":{"p":"modules.0.miscs.9","t":"misc"},"The `module` Object":{"p":"modules.0.vars.0","t":"var"},"`exports` {Object} ":{"p":"modules.0.vars.0.properties.0"},"`id` {String} ":{"p":"modules.0.vars.0.methods.0.signatures.0.params.0","t":"String"},"`filename` {String} ":{"p":"modules.0.vars.0.properties.2"},"`loaded` {Boolean} ":{"p":"modules.0.vars.0.properties.3"},"`parent` {Module Object} ":{"p":"modules.0.vars.0.properties.4"},"`children` {Array} ":{"p":"modules.0.vars.0.properties.5"},"module.require(id)":{"p":"modules.0.vars.0.methods.0","t":"method"},"Return: {Object} `exports` from the resolved module ":{"p":"modules.0.vars.0.methods.0.signatures.0.return","t":"Object"}},"util.json":{"util":{"p":"modules.0","t":"module"},"util.format(format, [...])":{"p":"modules.0.methods.0","t":"method"},"util.debug(string)":{"p":"modules.0.methods.1","t":"method"},"util.error([...])":{"p":"modules.0.methods.2","t":"method"},"util.puts([...])":{"p":"modules.0.methods.3","t":"method"},"util.print([...])":{"p":"modules.0.methods.4","t":"method"},"util.log(string)":{"p":"modules.0.methods.5","t":"method"},"util.inspect(object, [showHidden], [depth], [colors])":{"p":"modules.0.methods.6","t":"method"},"util.isArray(object)":{"p":"modules.0.methods.7","t":"method"},"util.isRegExp(object)":{"p":"modules.0.methods.8","t":"method"},"util.isDate(object)":{"p":"modules.0.methods.9","t":"method"},"util.isError(object)":{"p":"modules.0.methods.10","t":"method"},"util.pump(readableStream, writableStream, [callback])":{"p":"modules.0.methods.11","t":"method"},"util.inherits(constructor, superConstructor)":{"p":"modules.0.methods.12","t":"method"}},"events.json":{"Events":{"p":"modules.0","t":"module"},"Class: events.EventEmitter":{"p":"modules.0.classes.0","t":"class"},"emitter.addListener(event, listener)":{"p":"modules.0.classes.0.methods.0","t":"method"},"emitter.on(event, listener)":{"p":"modules.0.classes.0.methods.1","t":"method"},"emitter.once(event, listener)":{"p":"modules.0.classes.0.methods.2","t":"method"},"emitter.removeListener(event, listener)":{"p":"modules.0.classes.0.methods.3","t":"method"},"emitter.removeAllListeners([event])":{"p":"modules.0.classes.0.methods.4","t":"method"},"emitter.setMaxListeners(n)":{"p":"modules.0.classes.0.methods.5","t":"method"},"emitter.listeners(event)":{"p":"modules.0.classes.0.methods.6","t":"method"},"emitter.emit(event, [arg1], [arg2], [...])":{"p":"modules.0.classes.0.methods.7","t":"method"},"Event: 'newListener'":{"p":"modules.0.classes.0.events.0","t":"event"}},"process.json":{"process":{"p":"globals.0","t":"global"},"Event: 'exit'":{"p":"globals.0.events.0","t":"event"},"Event: 'uncaughtException'":{"p":"globals.0.events.1","t":"event"},"Signal Events":{"p":"globals.0.events.2","t":"event"},"process.stdout":{"p":"globals.0.properties.0"},"process.stderr":{"p":"globals.0.properties.1"},"process.stdin":{"p":"globals.0.properties.2"},"process.argv":{"p":"globals.0.properties.3"},"process.execPath":{"p":"globals.0.properties.4"},"process.env":{"p":"globals.0.properties.5"},"process.version":{"p":"globals.0.properties.6"},"process.versions":{"p":"globals.0.properties.7"},"process.config":{"p":"globals.0.properties.8"},"process.pid":{"p":"globals.0.properties.9"},"process.title":{"p":"globals.0.properties.10"},"process.arch":{"p":"globals.0.properties.11"},"process.platform":{"p":"globals.0.properties.12"},"process.abort()":{"p":"globals.0.methods.0","t":"method"},"process.chdir(directory)":{"p":"globals.0.methods.1","t":"method"},"process.cwd()":{"p":"globals.0.methods.2","t":"method"},"process.exit([code])":{"p":"globals.0.methods.3","t":"method"},"process.getgid()":{"p":"globals.0.methods.4","t":"method"},"process.setgid(id)":{"p":"globals.0.methods.5","t":"method"},"process.getuid()":{"p":"globals.0.methods.6","t":"method"},"process.setuid(id)":{"p":"globals.0.methods.7","t":"method"},"process.kill(pid, [signal])":{"p":"globals.0.methods.8","t":"method"},"process.memoryUsage()":{"p":"globals.0.methods.9","t":"method"},"process.nextTick(callback)":{"p":"globals.0.methods.10","t":"method"},"process.umask([mask])":{"p":"globals.0.methods.11","t":"method"},"process.uptime()":{"p":"globals.0.methods.12","t":"method"},"process.hrtime()":{"p":"globals.0.methods.13","t":"method"}},"domain.json":{"Domain":{"p":"modules.0","t":"module"},"Additions to Error objects":{"p":"modules.0.miscs.0","t":"misc"},"Implicit Binding":{"p":"modules.0.miscs.1","t":"misc"},"Explicit Binding":{"p":"modules.0.miscs.2","t":"misc"},"domain.create()":{"p":"modules.0.methods.0","t":"method"},"return: {Domain} ":{"p":"modules.0.methods.0.signatures.0.return","t":"Domain"},"Class: Domain":{"p":"modules.0.classes.0","t":"class"},"domain.run(fn)":{"p":"modules.0.classes.0.methods.0","t":"method"},"`fn` {Function} ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.0","t":"Function"},"domain.add(emitter)":{"p":"modules.0.classes.0.methods.1","t":"method"},"`emitter` {EventEmitter | Timer} emitter or timer to be added to the domain ":{"p":"modules.0.classes.0.methods.1.signatures.0.params.0","t":"EventEmitter | Timer"},"domain.remove(emitter)":{"p":"modules.0.classes.0.methods.2","t":"method"},"`emitter` {EventEmitter | Timer} emitter or timer to be removed from the domain ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.0","t":"EventEmitter | Timer"},"domain.bind(cb)":{"p":"modules.0.classes.0.methods.3","t":"method"},"return: {Function} The bound function ":{"p":"modules.0.classes.0.methods.3.signatures.0.return","t":"Function"},"`cb` {Function} The callback function ":{"p":"modules.0.classes.0.methods.4.signatures.0.params.0","t":"Function"},"domain.intercept(cb)":{"p":"modules.0.classes.0.methods.4","t":"method"},"return: {Function} The intercepted function ":{"p":"modules.0.classes.0.methods.4.signatures.0.return","t":"Function"},"domain.dispose()":{"p":"modules.0.classes.0.methods.5","t":"method"},"`members` {Array} ":{"p":"modules.0.classes.0.properties.0"}},"stream.json":{"Stream":{"p":"modules.0","t":"module"},"Readable Stream":{"p":"modules.0.classes.0","t":"class"},"Event: 'data'":{"p":"modules.0.classes.0.events.0","t":"event"},"Event: 'end'":{"p":"modules.0.classes.0.events.1","t":"event"},"Event: 'error'":{"p":"modules.0.classes.1.events.1","t":"event"},"Event: 'close'":{"p":"modules.0.classes.1.events.2","t":"event"},"stream.readable":{"p":"modules.0.classes.0.properties.0"},"stream.setEncoding([encoding])":{"p":"modules.0.classes.0.methods.0","t":"method"},"stream.pause()":{"p":"modules.0.classes.0.methods.1","t":"method"},"stream.resume()":{"p":"modules.0.classes.0.methods.2","t":"method"},"stream.destroy()":{"p":"modules.0.classes.1.methods.5","t":"method"},"stream.pipe(destination, [options])":{"p":"modules.0.classes.0.methods.4","t":"method"},"Writable Stream":{"p":"modules.0.classes.1","t":"class"},"Event: 'drain'":{"p":"modules.0.classes.1.events.0","t":"event"},"Event: 'pipe'":{"p":"modules.0.classes.1.events.3","t":"event"},"stream.writable":{"p":"modules.0.classes.1.properties.0"},"stream.write(string, [encoding], [fd])":{"p":"modules.0.classes.1.methods.0","t":"method"},"stream.write(buffer)":{"p":"modules.0.classes.1.methods.1","t":"method"},"stream.end()":{"p":"modules.0.classes.1.methods.2","t":"method"},"stream.end(string, encoding)":{"p":"modules.0.classes.1.methods.3","t":"method"},"stream.end(buffer)":{"p":"modules.0.classes.1.methods.4","t":"method"},"stream.destroySoon()":{"p":"modules.0.classes.1.methods.6","t":"method"}},"stdio.json":{"console":{"p":"globals.0","t":"global"},"console.log([data], [...])":{"p":"globals.0.methods.0","t":"method"},"console.info([data], [...])":{"p":"globals.0.methods.1","t":"method"},"console.error([data], [...])":{"p":"globals.0.methods.2","t":"method"},"console.warn([data], [...])":{"p":"globals.0.methods.3","t":"method"},"console.dir(obj)":{"p":"globals.0.methods.4","t":"method"},"console.time(label)":{"p":"globals.0.methods.5","t":"method"},"console.timeEnd(label)":{"p":"globals.0.methods.6","t":"method"},"console.trace(label)":{"p":"globals.0.methods.7","t":"method"},"console.assert(expression, [message])":{"p":"globals.0.methods.8","t":"method"}},"crypto.json":{"Crypto":{"p":"modules.0","t":"module"},"crypto.createCredentials(details)":{"p":"modules.0.methods.0","t":"method"},"crypto.createHash(algorithm)":{"p":"modules.0.methods.1","t":"method"},"crypto.createHmac(algorithm, key)":{"p":"modules.0.methods.2","t":"method"},"crypto.createCipher(algorithm, password)":{"p":"modules.0.methods.3","t":"method"},"crypto.createCipheriv(algorithm, key, iv)":{"p":"modules.0.methods.4","t":"method"},"crypto.createDecipher(algorithm, password)":{"p":"modules.0.methods.5","t":"method"},"crypto.createDecipheriv(algorithm, key, iv)":{"p":"modules.0.methods.6","t":"method"},"crypto.createSign(algorithm)":{"p":"modules.0.methods.7","t":"method"},"crypto.createVerify(algorithm)":{"p":"modules.0.methods.8","t":"method"},"crypto.createDiffieHellman(prime_length)":{"p":"modules.0.methods.9","t":"method"},"crypto.createDiffieHellman(prime, [encoding])":{"p":"modules.0.methods.10","t":"method"},"crypto.getDiffieHellman(group_name)":{"p":"modules.0.methods.11","t":"method"},"crypto.pbkdf2(password, salt, iterations, keylen, callback)":{"p":"modules.0.methods.12","t":"method"},"crypto.randomBytes(size, [callback])":{"p":"modules.0.methods.13","t":"method"},"Class: Hash":{"p":"modules.0.classes.0","t":"class"},"hash.update(data, [input_encoding])":{"p":"modules.0.classes.0.methods.0","t":"method"},"hash.digest([encoding])":{"p":"modules.0.classes.0.methods.1","t":"method"},"Class: Hmac":{"p":"modules.0.classes.1","t":"class"},"hmac.update(data)":{"p":"modules.0.classes.1.methods.0","t":"method"},"hmac.digest([encoding])":{"p":"modules.0.classes.1.methods.1","t":"method"},"Class: Cipher":{"p":"modules.0.classes.2","t":"class"},"cipher.update(data, [input_encoding], [output_encoding])":{"p":"modules.0.classes.2.methods.0","t":"method"},"cipher.final([output_encoding])":{"p":"modules.0.classes.2.methods.1","t":"method"},"cipher.setAutoPadding(auto_padding=true)":{"p":"modules.0.classes.2.methods.2","t":"method"},"Class: Decipher":{"p":"modules.0.classes.3","t":"class"},"decipher.update(data, [input_encoding], [output_encoding])":{"p":"modules.0.classes.3.methods.0","t":"method"},"decipher.final([output_encoding])":{"p":"modules.0.classes.3.methods.1","t":"method"},"decipher.setAutoPadding(auto_padding=true)":{"p":"modules.0.classes.3.methods.2","t":"method"},"Class: Signer":{"p":"modules.0.classes.4","t":"class"},"signer.update(data)":{"p":"modules.0.classes.4.methods.0","t":"method"},"signer.sign(private_key, [output_format])":{"p":"modules.0.classes.4.methods.1","t":"method"},"Class: Verify":{"p":"modules.0.classes.5","t":"class"},"verifier.update(data)":{"p":"modules.0.classes.5.methods.0","t":"method"},"verifier.verify(object, signature, [signature_format])":{"p":"modules.0.classes.5.methods.1","t":"method"},"Class: DiffieHellman":{"p":"modules.0.classes.6","t":"class"},"diffieHellman.generateKeys([encoding])":{"p":"modules.0.classes.6.methods.0","t":"method"},"diffieHellman.computeSecret(other_public_key, [input_encoding], [output_encoding])":{"p":"modules.0.classes.6.methods.1","t":"method"},"diffieHellman.getPrime([encoding])":{"p":"modules.0.classes.6.methods.2","t":"method"},"diffieHellman.getGenerator([encoding])":{"p":"modules.0.classes.6.methods.3","t":"method"},"diffieHellman.getPublicKey([encoding])":{"p":"modules.0.classes.6.methods.4","t":"method"},"diffieHellman.getPrivateKey([encoding])":{"p":"modules.0.classes.6.methods.5","t":"method"},"diffieHellman.setPublicKey(public_key, [encoding])":{"p":"modules.0.classes.6.methods.6","t":"method"},"diffieHellman.setPrivateKey(public_key, [encoding])":{"p":"modules.0.classes.6.methods.7","t":"method"}},"string_decoder.json":{"StringDecoder":{"p":"modules.0","t":"module"},"Class: StringDecoder":{"p":"modules.0.classes.0","t":"class"},"StringDecoder.write(buffer)":{"p":"modules.0.classes.0.methods.0","t":"method"}},"tls.json":{"TLS (SSL)":{"p":"modules.0","t":"module"},"Client-initiated renegotiation attack mitigation":{"p":"modules.0.miscs.0","t":"misc"},"NPN and SNI":{"p":"modules.0.miscs.1","t":"misc"},"tls.createServer(options, [secureConnectionListener])":{"p":"modules.0.methods.0","t":"method"},"tls.connect(options, [secureConnectListener])":{"p":"modules.0.methods.1","t":"method"},"tls.connect(port, [host], [options], [secureConnectListener])":{"p":"modules.0.methods.2","t":"method"},"tls.createSecurePair([credentials], [isServer], [requestCert], [rejectUnauthorized])":{"p":"modules.0.methods.3","t":"method"},"Class: SecurePair":{"p":"modules.0.classes.0","t":"class"},"Event: 'secure'":{"p":"modules.0.classes.0.events.0","t":"event"},"Class: tls.Server":{"p":"modules.0.classes.1","t":"class"},"Event: 'secureConnection'":{"p":"modules.0.classes.1.events.0","t":"event"},"Event: 'clientError'":{"p":"modules.0.classes.1.events.1","t":"event"},"server.listen(port, [host], [callback])":{"p":"modules.0.classes.1.methods.0","t":"method"},"server.close()":{"p":"modules.0.classes.1.methods.1","t":"method"},"server.address()":{"p":"modules.0.classes.1.methods.2","t":"method"},"server.addContext(hostname, credentials)":{"p":"modules.0.classes.1.methods.3","t":"method"},"server.maxConnections":{"p":"modules.0.classes.1.properties.0"},"server.connections":{"p":"modules.0.classes.1.properties.1"},"Class: tls.CleartextStream":{"p":"modules.0.classes.2","t":"class"},"Event: 'secureConnect'":{"p":"modules.0.classes.2.events.0","t":"event"},"cleartextStream.authorized":{"p":"modules.0.classes.2.properties.0"},"cleartextStream.authorizationError":{"p":"modules.0.classes.2.properties.1"},"cleartextStream.remoteAddress":{"p":"modules.0.classes.2.properties.2"},"cleartextStream.remotePort":{"p":"modules.0.classes.2.properties.3"},"cleartextStream.getPeerCertificate()":{"p":"modules.0.classes.2.methods.0","t":"method"},"cleartextStream.getCipher()":{"p":"modules.0.classes.2.methods.1","t":"method"},"cleartextStream.address()":{"p":"modules.0.classes.2.methods.2","t":"method"}},"buffer.json":{"Buffer":{"p":"modules.0","t":"module"},"Class: Buffer":{"p":"modules.0.classes.0","t":"class"},"buf.write(string, [offset], [length], [encoding])":{"p":"modules.0.classes.0.methods.0","t":"method"},"`string` String - data to be written to buffer ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.0"},"`offset` Number, Optional, Default: 0 ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.1"},"`length` Number, Optional, Default: `buffer.length - offset` ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.2"},"`encoding` String, Optional, Default: 'utf8' ":{"p":"modules.0.classes.0.classMethods.1.signatures.0.params.1"},"buf.toString([encoding], [start], [end])":{"p":"modules.0.classes.0.methods.1","t":"method"},"`start` Number, Optional, Default: 0 ":{"p":"modules.0.classes.0.methods.3.signatures.0.params.0"},"`end` Number, Optional, Default: `buffer.length` ":{"p":"modules.0.classes.0.methods.3.signatures.0.params.1"},"buf.copy(targetBuffer, [targetStart], [sourceStart], [sourceEnd])":{"p":"modules.0.classes.0.methods.2","t":"method"},"`targetBuffer` Buffer object - Buffer to copy into ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.0"},"`targetStart` Number, Optional, Default: 0 ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.1"},"`sourceStart` Number, Optional, Default: 0 ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.2"},"`sourceEnd` Number, Optional, Default: `buffer.length` ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.3"},"buf.slice([start], [end])":{"p":"modules.0.classes.0.methods.3","t":"method"},"buf.readUInt8(offset, [noAssert])":{"p":"modules.0.classes.0.methods.4","t":"method"},"Return: Number ":{"p":"modules.0.classes.0.classMethods.1.signatures.0.return"},"`offset` Number ":{"p":"modules.0.classes.0.methods.31.signatures.0.params.1"},"`noAssert` Boolean, Optional, Default: false ":{"p":"modules.0.classes.0.methods.31.signatures.0.params.2"},"buf.readUInt16LE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.5","t":"method"},"buf.readUInt16BE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.6","t":"method"},"buf.readUInt32LE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.7","t":"method"},"buf.readUInt32BE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.8","t":"method"},"buf.readInt8(offset, [noAssert])":{"p":"modules.0.classes.0.methods.9","t":"method"},"buf.readInt16LE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.10","t":"method"},"buf.readInt16BE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.11","t":"method"},"buf.readInt32LE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.12","t":"method"},"buf.readInt32BE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.13","t":"method"},"buf.readFloatLE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.14","t":"method"},"buf.readFloatBE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.15","t":"method"},"buf.readDoubleLE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.16","t":"method"},"buf.readDoubleBE(offset, [noAssert])":{"p":"modules.0.classes.0.methods.17","t":"method"},"buf.writeUInt8(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.18","t":"method"},"`value` Number ":{"p":"modules.0.classes.0.methods.31.signatures.0.params.0"},"buf.writeUInt16LE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.19","t":"method"},"buf.writeUInt16BE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.20","t":"method"},"buf.writeUInt32LE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.21","t":"method"},"buf.writeUInt32BE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.22","t":"method"},"buf.writeInt8(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.23","t":"method"},"buf.writeInt16LE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.24","t":"method"},"buf.writeInt16BE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.25","t":"method"},"buf.writeInt32LE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.26","t":"method"},"buf.writeInt32BE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.27","t":"method"},"buf.writeFloatLE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.28","t":"method"},"buf.writeFloatBE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.29","t":"method"},"buf.writeDoubleLE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.30","t":"method"},"buf.writeDoubleBE(value, offset, [noAssert])":{"p":"modules.0.classes.0.methods.31","t":"method"},"buf.fill(value, [offset], [end])":{"p":"modules.0.classes.0.methods.32","t":"method"},"`value` ":{"p":"modules.0.classes.0.methods.32.signatures.0.params.0"},"`offset` Number, Optional ":{"p":"modules.0.classes.0.methods.32.signatures.0.params.1"},"`end` Number, Optional ":{"p":"modules.0.classes.0.methods.32.signatures.0.params.2"},"buf[index]":{"p":"modules.0.classes.0.properties.0"},"`length` Number ":{"p":"modules.0.classes.0.properties.1"},"Class Method: Buffer.isBuffer(obj)":{"p":"modules.0.classes.0.classMethods.0","t":"classMethod"},"Return: Boolean ":{"p":"modules.0.classes.0.classMethods.0.signatures.0.return"},"`obj` Object ":{"p":"modules.0.classes.0.classMethods.0.signatures.0.params.0"},"Class Method: Buffer.byteLength(string, [encoding])":{"p":"modules.0.classes.0.classMethods.1","t":"classMethod"},"`string` String ":{"p":"modules.0.classes.0.classMethods.1.signatures.0.params.0"},"Class Method: Buffer.concat(list, [totalLength])":{"p":"modules.0.classes.0.classMethods.2","t":"classMethod"},"`list` {Array} List of Buffer objects to concat ":{"p":"modules.0.classes.0.classMethods.2.signatures.0.params.0","t":"Array"},"`totalLength` {Number} Total length of the buffers when concatenated ":{"p":"modules.0.classes.0.classMethods.2.signatures.0.params.1","t":"Number"},"`size` Number ":{"p":"modules.0.classes.0.signatures.0.params.0"},"`array` Array ":{"p":"modules.0.classes.0.signatures.2.params.0"},"`str` String - string to encode. ":{"p":"modules.0.classes.0.signatures.4.params.0"},"`encoding` String - encoding to use, Optional. ":{"p":"modules.0.classes.0.signatures.4.params.1"},"Class: SlowBuffer":{"p":"modules.0.classes.1","t":"class"},"`INSPECT_MAX_BYTES` Number, Default: 50 ":{"p":"modules.0.properties.0"}},"path.json":{"Path":{"p":"modules.0","t":"module"},"path.normalize(p)":{"p":"modules.0.methods.0","t":"method"},"path.join([path1], [path2], [...])":{"p":"modules.0.methods.1","t":"method"},"path.resolve([from ...], to)":{"p":"modules.0.methods.2","t":"method"},"path.relative(from, to)":{"p":"modules.0.methods.3","t":"method"},"path.dirname(p)":{"p":"modules.0.methods.4","t":"method"},"path.basename(p, [ext])":{"p":"modules.0.methods.5","t":"method"},"path.extname(p)":{"p":"modules.0.methods.6","t":"method"},"path.sep":{"p":"modules.0.properties.0"}},"fs.json":{"File System":{"p":"modules.0","t":"module"},"fs.rename(oldPath, newPath, [callback])":{"p":"modules.0.methods.0","t":"method"},"fs.renameSync(oldPath, newPath)":{"p":"modules.0.methods.1","t":"method"},"fs.truncate(fd, len, [callback])":{"p":"modules.0.methods.2","t":"method"},"fs.truncateSync(fd, len)":{"p":"modules.0.methods.3","t":"method"},"fs.chown(path, uid, gid, [callback])":{"p":"modules.0.methods.4","t":"method"},"fs.chownSync(path, uid, gid)":{"p":"modules.0.methods.5","t":"method"},"fs.fchown(fd, uid, gid, [callback])":{"p":"modules.0.methods.6","t":"method"},"fs.fchownSync(fd, uid, gid)":{"p":"modules.0.methods.7","t":"method"},"fs.lchown(path, uid, gid, [callback])":{"p":"modules.0.methods.8","t":"method"},"fs.lchownSync(path, uid, gid)":{"p":"modules.0.methods.9","t":"method"},"fs.chmod(path, mode, [callback])":{"p":"modules.0.methods.10","t":"method"},"fs.chmodSync(path, mode)":{"p":"modules.0.methods.11","t":"method"},"fs.fchmod(fd, mode, [callback])":{"p":"modules.0.methods.12","t":"method"},"fs.fchmodSync(fd, mode)":{"p":"modules.0.methods.13","t":"method"},"fs.lchmod(path, mode, [callback])":{"p":"modules.0.methods.14","t":"method"},"fs.lchmodSync(path, mode)":{"p":"modules.0.methods.15","t":"method"},"fs.stat(path, [callback])":{"p":"modules.0.methods.16","t":"method"},"fs.lstat(path, [callback])":{"p":"modules.0.methods.17","t":"method"},"fs.fstat(fd, [callback])":{"p":"modules.0.methods.18","t":"method"},"fs.statSync(path)":{"p":"modules.0.methods.19","t":"method"},"fs.lstatSync(path)":{"p":"modules.0.methods.20","t":"method"},"fs.fstatSync(fd)":{"p":"modules.0.methods.21","t":"method"},"fs.link(srcpath, dstpath, [callback])":{"p":"modules.0.methods.22","t":"method"},"fs.linkSync(srcpath, dstpath)":{"p":"modules.0.methods.23","t":"method"},"fs.symlink(destination, path, [type], [callback])":{"p":"modules.0.methods.24","t":"method"},"fs.symlinkSync(destination, path, [type])":{"p":"modules.0.methods.25","t":"method"},"fs.readlink(path, [callback])":{"p":"modules.0.methods.26","t":"method"},"fs.readlinkSync(path)":{"p":"modules.0.methods.27","t":"method"},"fs.realpath(path, [cache], callback)":{"p":"modules.0.methods.28","t":"method"},"fs.realpathSync(path, [cache])":{"p":"modules.0.methods.29","t":"method"},"fs.unlink(path, [callback])":{"p":"modules.0.methods.30","t":"method"},"fs.unlinkSync(path)":{"p":"modules.0.methods.31","t":"method"},"fs.rmdir(path, [callback])":{"p":"modules.0.methods.32","t":"method"},"fs.rmdirSync(path)":{"p":"modules.0.methods.33","t":"method"},"fs.mkdir(path, [mode], [callback])":{"p":"modules.0.methods.34","t":"method"},"fs.mkdirSync(path, [mode])":{"p":"modules.0.methods.35","t":"method"},"fs.readdir(path, [callback])":{"p":"modules.0.methods.36","t":"method"},"fs.readdirSync(path)":{"p":"modules.0.methods.37","t":"method"},"fs.close(fd, [callback])":{"p":"modules.0.methods.38","t":"method"},"fs.closeSync(fd)":{"p":"modules.0.methods.39","t":"method"},"fs.open(path, flags, [mode], [callback])":{"p":"modules.0.methods.40","t":"method"},"fs.openSync(path, flags, [mode])":{"p":"modules.0.methods.41","t":"method"},"fs.utimes(path, atime, mtime, [callback])":{"p":"modules.0.methods.42","t":"method"},"fs.utimesSync(path, atime, mtime)":{"p":"modules.0.methods.43","t":"method"},"fs.futimes(fd, atime, mtime, [callback])":{"p":"modules.0.methods.44","t":"method"},"fs.futimesSync(fd, atime, mtime)":{"p":"modules.0.methods.45","t":"method"},"fs.fsync(fd, [callback])":{"p":"modules.0.methods.46","t":"method"},"fs.fsyncSync(fd)":{"p":"modules.0.methods.47","t":"method"},"fs.write(fd, buffer, offset, length, position, [callback])":{"p":"modules.0.methods.48","t":"method"},"fs.writeSync(fd, buffer, offset, length, position)":{"p":"modules.0.methods.49","t":"method"},"fs.read(fd, buffer, offset, length, position, [callback])":{"p":"modules.0.methods.50","t":"method"},"fs.readSync(fd, buffer, offset, length, position)":{"p":"modules.0.methods.51","t":"method"},"fs.readFile(filename, [encoding], [callback])":{"p":"modules.0.methods.52","t":"method"},"fs.readFileSync(filename, [encoding])":{"p":"modules.0.methods.53","t":"method"},"fs.writeFile(filename, data, [encoding], [callback])":{"p":"modules.0.methods.54","t":"method"},"fs.writeFileSync(filename, data, [encoding])":{"p":"modules.0.methods.55","t":"method"},"fs.appendFile(filename, data, encoding='utf8', [callback])":{"p":"modules.0.methods.56","t":"method"},"fs.appendFileSync(filename, data, encoding='utf8')":{"p":"modules.0.methods.57","t":"method"},"fs.watchFile(filename, [options], listener)":{"p":"modules.0.methods.58","t":"method"},"fs.unwatchFile(filename)":{"p":"modules.0.methods.59","t":"method"},"fs.watch(filename, [options], [listener])":{"p":"modules.0.methods.60","t":"method"},"Caveats":{"p":"modules.0.methods.60.miscs.0","t":"misc"},"Availability":{"p":"modules.0.methods.60.miscs.0.miscs.0","t":"misc"},"Filename Argument":{"p":"modules.0.methods.60.miscs.0.miscs.1","t":"misc"},"fs.exists(path, [callback])":{"p":"modules.0.methods.61","t":"method"},"fs.existsSync(path)":{"p":"modules.0.methods.62","t":"method"},"fs.createReadStream(path, [options])":{"p":"modules.0.methods.63","t":"method"},"fs.createWriteStream(path, [options])":{"p":"modules.0.methods.64","t":"method"},"Class: fs.Stats":{"p":"modules.0.classes.0","t":"class"},"Class: fs.ReadStream":{"p":"modules.0.classes.1","t":"class"},"Event: 'open'":{"p":"modules.0.properties.0.events.0","t":"event"},"Class: fs.FSWatcher":{"p":"modules.0.classes.2","t":"class"},"watcher.close()":{"p":"modules.0.classes.2.methods.0","t":"method"},"Event: 'change'":{"p":"modules.0.classes.2.events.0","t":"event"},"Event: 'error'":{"p":"modules.0.classes.2.events.1","t":"event"},"fs.WriteStream":{"p":"modules.0.properties.0"},"file.bytesWritten":{"p":"modules.0.properties.0.properties.0"}},"dns.json":{"DNS":{"p":"modules.0","t":"module"},"dns.lookup(domain, [family], callback)":{"p":"modules.0.methods.0","t":"method"},"dns.resolve(domain, [rrtype], callback)":{"p":"modules.0.methods.1","t":"method"},"dns.resolve4(domain, callback)":{"p":"modules.0.methods.2","t":"method"},"dns.resolve6(domain, callback)":{"p":"modules.0.methods.3","t":"method"},"dns.resolveMx(domain, callback)":{"p":"modules.0.methods.4","t":"method"},"dns.resolveTxt(domain, callback)":{"p":"modules.0.methods.5","t":"method"},"dns.resolveSrv(domain, callback)":{"p":"modules.0.methods.6","t":"method"},"dns.resolveNs(domain, callback)":{"p":"modules.0.methods.7","t":"method"},"dns.resolveCname(domain, callback)":{"p":"modules.0.methods.8","t":"method"},"dns.reverse(ip, callback)":{"p":"modules.0.methods.9","t":"method"},"Error codes":{"p":"modules.0.modules.0","t":"module"}},"dgram.json":{"UDP / Datagram Sockets":{"p":"modules.0","t":"module"},"dgram.createSocket(type, [callback])":{"p":"modules.0.methods.0","t":"method"},"Returns: Socket object ":{"p":"modules.0.methods.0.signatures.0.return"},"`type` String. Either 'udp4' or 'udp6' ":{"p":"modules.0.methods.0.signatures.0.params.0"},"`callback` Function. Attached as a listener to `message` events. Optional ":{"p":"modules.0.methods.0.signatures.0.params.1"},"Class: Socket":{"p":"modules.0.classes.0","t":"class"},"Event: 'message'":{"p":"modules.0.classes.0.events.0","t":"event"},"Event: 'listening'":{"p":"modules.0.classes.0.events.1","t":"event"},"Event: 'close'":{"p":"modules.0.classes.0.events.2","t":"event"},"Event: 'error'":{"p":"modules.0.classes.0.events.3","t":"event"},"dgram.send(buf, offset, length, port, address, [callback])":{"p":"modules.0.classes.0.methods.0","t":"method"},"`buf` Buffer object.  Message to be sent ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.0"},"`offset` Integer. Offset in the buffer where the message starts. ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.1"},"`length` Integer. Number of bytes in the message. ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.2"},"`port` Integer. destination port ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.3"},"`address` String. destination IP ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.4"},"`callback` Function. Callback when message is done being delivered. Optional. ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.5"},"dgram.bind(port, [address])":{"p":"modules.0.classes.0.methods.1","t":"method"},"`port` Integer ":{"p":"modules.0.classes.0.methods.1.signatures.0.params.0"},"`address` String, Optional ":{"p":"modules.0.classes.0.methods.1.signatures.0.params.1"},"dgram.close()":{"p":"modules.0.classes.0.methods.2","t":"method"},"dgram.address()":{"p":"modules.0.classes.0.methods.3","t":"method"},"dgram.setBroadcast(flag)":{"p":"modules.0.classes.0.methods.4","t":"method"},"`flag` Boolean ":{"p":"modules.0.classes.0.methods.7.signatures.0.params.0"},"dgram.setTTL(ttl)":{"p":"modules.0.classes.0.methods.5","t":"method"},"`ttl` Integer ":{"p":"modules.0.classes.0.methods.6.signatures.0.params.0"},"dgram.setMulticastTTL(ttl)":{"p":"modules.0.classes.0.methods.6","t":"method"},"dgram.setMulticastLoopback(flag)":{"p":"modules.0.classes.0.methods.7","t":"method"},"dgram.addMembership(multicastAddress, [multicastInterface])":{"p":"modules.0.classes.0.methods.8","t":"method"},"`multicastAddress` String ":{"p":"modules.0.classes.0.methods.9.signatures.0.params.0"},"`multicastInterface` String, Optional ":{"p":"modules.0.classes.0.methods.9.signatures.0.params.1"},"dgram.dropMembership(multicastAddress, [multicastInterface])":{"p":"modules.0.classes.0.methods.9","t":"method"}},"http.json":{"HTTP":{"p":"modules.0","t":"module"},"`STATUS_CODES` {Object} ":{"p":"modules.0.properties.0"},"http.globalAgent":{"p":"modules.0.properties.1"},"http.ClientResponse":{"p":"modules.0.properties.2"},"Event: 'data'":{"p":"modules.0.classes.1.events.0","t":"event"},"Event: 'end'":{"p":"modules.0.classes.1.events.1","t":"event"},"Event: 'close'":{"p":"modules.0.classes.2.events.0","t":"event"},"response.statusCode":{"p":"modules.0.classes.2.properties.0"},"response.httpVersion":{"p":"modules.0.properties.2.properties.1"},"response.headers":{"p":"modules.0.properties.2.properties.2"},"response.trailers":{"p":"modules.0.properties.2.properties.3"},"response.setEncoding([encoding])":{"p":"modules.0.properties.2.methods.0","t":"method"},"response.pause()":{"p":"modules.0.properties.2.methods.1","t":"method"},"response.resume()":{"p":"modules.0.properties.2.methods.2","t":"method"},"http.createServer([requestListener])":{"p":"modules.0.methods.0","t":"method"},"http.createClient([port], [host])":{"p":"modules.0.methods.1","t":"method"},"http.request(options, callback)":{"p":"modules.0.methods.2","t":"method"},"http.get(options, callback)":{"p":"modules.0.methods.3","t":"method"},"Class: http.Server":{"p":"modules.0.classes.0","t":"class"},"Event: 'request'":{"p":"modules.0.classes.0.events.0","t":"event"},"Event: 'connection'":{"p":"modules.0.classes.0.events.1","t":"event"},"Event: 'checkContinue'":{"p":"modules.0.classes.0.events.3","t":"event"},"Event: 'connect'":{"p":"modules.0.classes.4.events.2","t":"event"},"Event: 'upgrade'":{"p":"modules.0.classes.4.events.3","t":"event"},"Event: 'clientError'":{"p":"modules.0.classes.0.events.6","t":"event"},"server.listen(port, [hostname], [backlog], [callback])":{"p":"modules.0.classes.0.methods.0","t":"method"},"server.listen(path, [callback])":{"p":"modules.0.classes.0.methods.1","t":"method"},"server.listen(handle, [listeningListener])":{"p":"modules.0.classes.0.methods.2","t":"method"},"`handle` {Object} ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.0","t":"Object"},"`listeningListener` {Function} ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.1","t":"Function"},"server.close([cb])":{"p":"modules.0.classes.0.methods.3","t":"method"},"server.maxHeadersCount":{"p":"modules.0.classes.0.properties.0"},"Class: http.ServerRequest":{"p":"modules.0.classes.1","t":"class"},"request.method":{"p":"modules.0.classes.1.properties.0"},"request.url":{"p":"modules.0.classes.1.properties.1"},"request.headers":{"p":"modules.0.classes.1.properties.2"},"request.trailers":{"p":"modules.0.classes.1.properties.3"},"request.httpVersion":{"p":"modules.0.classes.1.properties.4"},"request.connection":{"p":"modules.0.classes.1.properties.5"},"request.setEncoding([encoding])":{"p":"modules.0.classes.1.methods.0","t":"method"},"request.pause()":{"p":"modules.0.classes.1.methods.1","t":"method"},"request.resume()":{"p":"modules.0.classes.1.methods.2","t":"method"},"Class: http.ServerResponse":{"p":"modules.0.classes.2","t":"class"},"response.writeContinue()":{"p":"modules.0.classes.2.methods.0","t":"method"},"response.writeHead(statusCode, [reasonPhrase], [headers])":{"p":"modules.0.classes.2.methods.1","t":"method"},"response.setHeader(name, value)":{"p":"modules.0.classes.2.methods.2","t":"method"},"response.getHeader(name)":{"p":"modules.0.classes.2.methods.3","t":"method"},"response.removeHeader(name)":{"p":"modules.0.classes.2.methods.4","t":"method"},"response.write(chunk, [encoding])":{"p":"modules.0.classes.2.methods.5","t":"method"},"response.addTrailers(headers)":{"p":"modules.0.classes.2.methods.6","t":"method"},"response.end([data], [encoding])":{"p":"modules.0.classes.2.methods.7","t":"method"},"response.sendDate":{"p":"modules.0.classes.2.properties.1"},"Class: http.Agent":{"p":"modules.0.classes.3","t":"class"},"agent.maxSockets":{"p":"modules.0.classes.3.properties.0"},"agent.sockets":{"p":"modules.0.classes.3.properties.1"},"agent.requests":{"p":"modules.0.classes.3.properties.2"},"Class: http.ClientRequest":{"p":"modules.0.classes.4","t":"class"},"Event 'response'":{"p":"modules.0.classes.4.events.0","t":"event"},"Event: 'socket'":{"p":"modules.0.classes.4.events.1","t":"event"},"Event: 'continue'":{"p":"modules.0.classes.4.events.4","t":"event"},"request.write(chunk, [encoding])":{"p":"modules.0.classes.4.methods.0","t":"method"},"request.end([data], [encoding])":{"p":"modules.0.classes.4.methods.1","t":"method"},"request.abort()":{"p":"modules.0.classes.4.methods.2","t":"method"},"request.setTimeout(timeout, [callback])":{"p":"modules.0.classes.4.methods.3","t":"method"},"request.setNoDelay([noDelay])":{"p":"modules.0.classes.4.methods.4","t":"method"},"request.setSocketKeepAlive([enable], [initialDelay])":{"p":"modules.0.classes.4.methods.5","t":"method"}},"https.json":{"HTTPS":{"p":"modules.0","t":"module"},"Class: https.Server":{"p":"modules.0.classes.0","t":"class"},"Class: https.Agent":{"p":"modules.0.classes.1","t":"class"},"https.createServer(options, [requestListener])":{"p":"modules.0.methods.0","t":"method"},"https.request(options, callback)":{"p":"modules.0.methods.1","t":"method"},"https.get(options, callback)":{"p":"modules.0.methods.2","t":"method"},"https.globalAgent":{"p":"modules.0.properties.0"}},"url.json":{"URL":{"p":"modules.0","t":"module"},"url.parse(urlStr, [parseQueryString], [slashesDenoteHost])":{"p":"modules.0.methods.0","t":"method"},"url.format(urlObj)":{"p":"modules.0.methods.1","t":"method"},"url.resolve(from, to)":{"p":"modules.0.methods.2","t":"method"}},"querystring.json":{"Query String":{"p":"modules.0","t":"module"},"querystring.stringify(obj, [sep], [eq])":{"p":"modules.0.methods.0","t":"method"},"querystring.parse(str, [sep], [eq], [options])":{"p":"modules.0.methods.1","t":"method"},"querystring.escape":{"p":"modules.0.properties.0"},"querystring.unescape":{"p":"modules.0.properties.1"}},"punycode.json":{"punycode":{"p":"modules.0","t":"module"},"punycode.decode(string)":{"p":"modules.0.methods.0","t":"method"},"punycode.encode(string)":{"p":"modules.0.methods.1","t":"method"},"punycode.toUnicode(domain)":{"p":"modules.0.methods.2","t":"method"},"punycode.toASCII(domain)":{"p":"modules.0.methods.3","t":"method"},"punycode.ucs2":{"p":"modules.0.properties.0"},"punycode.ucs2.decode(string)":{"p":"modules.0.properties.0.modules.0","t":"module"},"punycode.ucs2.encode(codePoints)":{"p":"modules.0.properties.0.modules.1","t":"module"},"punycode.version":{"p":"modules.0.properties.1"}},"net.json":{"net":{"p":"modules.0","t":"module"},"net.createServer([options], [connectionListener])":{"p":"modules.0.methods.0","t":"method"},"net.connect(options, [connectionListener])":{"p":"modules.0.methods.1","t":"method"},"net.createConnection(options, [connectionListener])":{"p":"modules.0.methods.2","t":"method"},"net.connect(port, [host], [connectListener])":{"p":"modules.0.methods.3","t":"method"},"net.createConnection(port, [host], [connectListener])":{"p":"modules.0.methods.4","t":"method"},"net.connect(path, [connectListener])":{"p":"modules.0.methods.5","t":"method"},"net.createConnection(path, [connectListener])":{"p":"modules.0.methods.6","t":"method"},"net.isIP(input)":{"p":"modules.0.methods.7","t":"method"},"net.isIPv4(input)":{"p":"modules.0.methods.8","t":"method"},"net.isIPv6(input)":{"p":"modules.0.methods.9","t":"method"},"Class: net.Server":{"p":"modules.0.classes.0","t":"class"},"server.listen(port, [host], [backlog], [listeningListener])":{"p":"modules.0.classes.0.methods.0","t":"method"},"server.listen(path, [listeningListener])":{"p":"modules.0.classes.0.methods.1","t":"method"},"server.listen(handle, [listeningListener])":{"p":"modules.0.classes.0.methods.2","t":"method"},"`handle` {Object} ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.0","t":"Object"},"`listeningListener` {Function} ":{"p":"modules.0.classes.0.methods.2.signatures.0.params.1","t":"Function"},"server.close([cb])":{"p":"modules.0.classes.0.methods.3","t":"method"},"server.address()":{"p":"modules.0.classes.0.methods.4","t":"method"},"server.maxConnections":{"p":"modules.0.classes.0.properties.0"},"server.connections":{"p":"modules.0.classes.0.properties.1"},"Event: 'listening'":{"p":"modules.0.classes.0.events.0","t":"event"},"Event: 'connection'":{"p":"modules.0.classes.0.events.1","t":"event"},"Event: 'close'":{"p":"modules.0.classes.1.events.6","t":"event"},"Event: 'error'":{"p":"modules.0.classes.1.events.5","t":"event"},"Class: net.Socket":{"p":"modules.0.classes.1","t":"class"},"new net.Socket([options])":{"p":"modules.0.classes.1.methods.0","t":"method"},"socket.connect(port, [host], [connectListener])":{"p":"modules.0.classes.1.methods.1","t":"method"},"socket.connect(path, [connectListener])":{"p":"modules.0.classes.1.methods.2","t":"method"},"socket.setEncoding([encoding])":{"p":"modules.0.classes.1.methods.3","t":"method"},"socket.write(data, [encoding], [callback])":{"p":"modules.0.classes.1.methods.4","t":"method"},"socket.end([data], [encoding])":{"p":"modules.0.classes.1.methods.5","t":"method"},"socket.destroy()":{"p":"modules.0.classes.1.methods.6","t":"method"},"socket.pause()":{"p":"modules.0.classes.1.methods.7","t":"method"},"socket.resume()":{"p":"modules.0.classes.1.methods.8","t":"method"},"socket.setTimeout(timeout, [callback])":{"p":"modules.0.classes.1.methods.9","t":"method"},"socket.setNoDelay([noDelay])":{"p":"modules.0.classes.1.methods.10","t":"method"},"socket.setKeepAlive([enable], [initialDelay])":{"p":"modules.0.classes.1.methods.11","t":"method"},"socket.address()":{"p":"modules.0.classes.1.methods.12","t":"method"},"socket.bufferSize":{"p":"modules.0.classes.1.properties.0"},"socket.remoteAddress":{"p":"modules.0.classes.1.properties.1"},"socket.remotePort":{"p":"modules.0.classes.1.properties.2"},"socket.bytesRead":{"p":"modules.0.classes.1.properties.3"},"socket.bytesWritten":{"p":"modules.0.classes.1.properties.4"},"Event: 'connect'":{"p":"modules.0.classes.1.events.0","t":"event"},"Event: 'data'":{"p":"modules.0.classes.1.events.1","t":"event"},"Event: 'end'":{"p":"modules.0.classes.1.events.2","t":"event"},"Event: 'timeout'":{"p":"modules.0.classes.1.events.3","t":"event"},"Event: 'drain'":{"p":"modules.0.classes.1.events.4","t":"event"}},"repl.json":{"REPL":{"p":"modules.0","t":"module"},"repl.start(options)":{"p":"modules.0.methods.0","t":"method"},"Event: 'exit'":{"p":"modules.0.methods.0.events.0","t":"event"},"REPL Features":{"p":"modules.0.miscs.0","t":"misc"}},"vm.json":{"Executing JavaScript":{"p":"modules.0","t":"module"},"Caveats":{"p":"modules.0.modules.0","t":"module"},"Sandboxes":{"p":"modules.0.modules.0.modules.0","t":"module"},"Globals":{"p":"modules.0.modules.0.modules.1","t":"module"},"vm.runInThisContext(code, [filename])":{"p":"modules.0.methods.0","t":"method"},"vm.runInNewContext(code, [sandbox], [filename])":{"p":"modules.0.methods.1","t":"method"},"vm.runInContext(code, context, [filename])":{"p":"modules.0.methods.2","t":"method"},"vm.createContext([initSandbox])":{"p":"modules.0.methods.3","t":"method"},"vm.createScript(code, [filename])":{"p":"modules.0.methods.4","t":"method"},"Class: Script":{"p":"modules.0.classes.0","t":"class"},"script.runInThisContext()":{"p":"modules.0.classes.0.methods.0","t":"method"},"script.runInNewContext([sandbox])":{"p":"modules.0.classes.0.methods.1","t":"method"}},"assert.json":{"Assert":{"p":"modules.0","t":"module"},"assert.fail(actual, expected, message, operator)":{"p":"modules.0.methods.0","t":"method"},"assert(value, message), assert.ok(value, [message])":{"p":"modules.0.methods.1","t":"method"},"assert.equal(actual, expected, [message])":{"p":"modules.0.methods.2","t":"method"},"assert.notEqual(actual, expected, [message])":{"p":"modules.0.methods.3","t":"method"},"assert.deepEqual(actual, expected, [message])":{"p":"modules.0.methods.4","t":"method"},"assert.notDeepEqual(actual, expected, [message])":{"p":"modules.0.methods.5","t":"method"},"assert.strictEqual(actual, expected, [message])":{"p":"modules.0.methods.6","t":"method"},"assert.notStrictEqual(actual, expected, [message])":{"p":"modules.0.methods.7","t":"method"},"assert.throws(block, [error], [message])":{"p":"modules.0.methods.8","t":"method"},"assert.doesNotThrow(block, [error], [message])":{"p":"modules.0.methods.9","t":"method"},"assert.ifError(value)":{"p":"modules.0.methods.10","t":"method"}},"tty.json":{"TTY":{"p":"modules.0","t":"module"},"tty.isatty(fd)":{"p":"modules.0.methods.0","t":"method"},"tty.setRawMode(mode)":{"p":"modules.0.methods.1","t":"method"},"Class: ReadStream":{"p":"modules.0.classes.0","t":"class"},"rs.isRaw":{"p":"modules.0.classes.0.properties.0"},"rs.setRawMode(mode)":{"p":"modules.0.classes.0.methods.0","t":"method"},"Class WriteStream":{"p":"modules.0.modules.0","t":"module"},"ws.columns":{"p":"modules.0.modules.0.properties.0"},"ws.rows":{"p":"modules.0.modules.0.properties.1"},"Event: 'resize'":{"p":"modules.0.modules.0.events.0","t":"event"}},"addons.json":{"Addons":{"p":"modules.0","t":"module"},"Hello world":{"p":"modules.0.modules.0","t":"module"},"Addon patterns":{"p":"modules.0.modules.1","t":"module"},"Function arguments":{"p":"modules.0.modules.1.modules.0","t":"module"},"Callbacks":{"p":"modules.0.modules.1.modules.1","t":"module"},"Object factory":{"p":"modules.0.modules.1.modules.2","t":"module"},"Function factory":{"p":"modules.0.modules.1.modules.3","t":"module"},"Wrapping C++ objects":{"p":"modules.0.modules.1.modules.4","t":"module"},"Factory of wrapped objects":{"p":"modules.0.modules.1.modules.5","t":"module"},"Passing wrapped objects around":{"p":"modules.0.modules.1.modules.6","t":"module"}},"readline.json":{"Readline":{"p":"modules.0","t":"module"},"readline.createInterface(options)":{"p":"modules.0.methods.0","t":"method"},"Class: Interface":{"p":"modules.0.classes.0","t":"class"},"rl.setPrompt(prompt, length)":{"p":"modules.0.classes.0.methods.0","t":"method"},"rl.prompt([preserveCursor])":{"p":"modules.0.classes.0.methods.1","t":"method"},"rl.question(query, callback)":{"p":"modules.0.classes.0.methods.2","t":"method"},"rl.pause()":{"p":"modules.0.classes.0.methods.3","t":"method"},"rl.resume()":{"p":"modules.0.classes.0.methods.4","t":"method"},"rl.close()":{"p":"modules.0.classes.0.methods.5","t":"method"},"rl.write(data, [key])":{"p":"modules.0.classes.0.methods.6","t":"method"},"Events":{"p":"modules.0.modules.0","t":"module"},"Event: 'line'":{"p":"modules.0.modules.0.events.0","t":"event"},"Event: 'pause'":{"p":"modules.0.modules.0.events.1","t":"event"},"Event: 'resume'":{"p":"modules.0.modules.0.events.2","t":"event"},"Event: 'close'":{"p":"modules.0.modules.0.events.3","t":"event"},"Event: 'SIGINT'":{"p":"modules.0.modules.0.events.4","t":"event"},"Event: 'SIGTSTP'":{"p":"modules.0.modules.0.events.5","t":"event"},"Event: 'SIGCONT'":{"p":"modules.0.modules.0.events.6","t":"event"}},"zlib.json":{"Zlib":{"p":"modules.0","t":"module"},"zlib.createGzip([options])":{"p":"modules.0.methods.0","t":"method"},"zlib.createGunzip([options])":{"p":"modules.0.methods.1","t":"method"},"zlib.createDeflate([options])":{"p":"modules.0.methods.2","t":"method"},"zlib.createInflate([options])":{"p":"modules.0.methods.3","t":"method"},"zlib.createDeflateRaw([options])":{"p":"modules.0.methods.4","t":"method"},"zlib.createInflateRaw([options])":{"p":"modules.0.methods.5","t":"method"},"zlib.createUnzip([options])":{"p":"modules.0.methods.6","t":"method"},"zlib.deflate(buf, callback)":{"p":"modules.0.methods.7","t":"method"},"zlib.deflateRaw(buf, callback)":{"p":"modules.0.methods.8","t":"method"},"zlib.gzip(buf, callback)":{"p":"modules.0.methods.9","t":"method"},"zlib.gunzip(buf, callback)":{"p":"modules.0.methods.10","t":"method"},"zlib.inflate(buf, callback)":{"p":"modules.0.methods.11","t":"method"},"zlib.inflateRaw(buf, callback)":{"p":"modules.0.methods.12","t":"method"},"zlib.unzip(buf, callback)":{"p":"modules.0.methods.13","t":"method"},"Class: zlib.Gzip":{"p":"modules.0.classes.0","t":"class"},"Class: zlib.Gunzip":{"p":"modules.0.classes.1","t":"class"},"Class: zlib.Deflate":{"p":"modules.0.classes.2","t":"class"},"Class: zlib.Inflate":{"p":"modules.0.classes.3","t":"class"},"Class: zlib.DeflateRaw":{"p":"modules.0.classes.4","t":"class"},"Class: zlib.InflateRaw":{"p":"modules.0.classes.5","t":"class"},"Class: zlib.Unzip":{"p":"modules.0.classes.6","t":"class"},"Convenience Methods":{"p":"modules.0.miscs.0","t":"misc"},"Options":{"p":"modules.0.miscs.1","t":"misc"},"Memory Usage Tuning":{"p":"modules.0.miscs.2","t":"misc"},"Constants":{"p":"modules.0.miscs.3","t":"misc"}},"os.json":{"os":{"p":"modules.0","t":"module"},"os.tmpDir()":{"p":"modules.0.methods.0","t":"method"},"os.hostname()":{"p":"modules.0.methods.1","t":"method"},"os.type()":{"p":"modules.0.methods.2","t":"method"},"os.platform()":{"p":"modules.0.methods.3","t":"method"},"os.arch()":{"p":"modules.0.methods.4","t":"method"},"os.release()":{"p":"modules.0.methods.5","t":"method"},"os.uptime()":{"p":"modules.0.methods.6","t":"method"},"os.loadavg()":{"p":"modules.0.methods.7","t":"method"},"os.totalmem()":{"p":"modules.0.methods.8","t":"method"},"os.freemem()":{"p":"modules.0.methods.9","t":"method"},"os.cpus()":{"p":"modules.0.methods.10","t":"method"},"os.networkInterfaces()":{"p":"modules.0.methods.11","t":"method"},"os.EOL":{"p":"modules.0.properties.0"}},"appendix_1.json":{"Appendix 1 - Third Party Modules":{"p":"modules.0","t":"module"}},"debugger.json":{"Debugger":{"p":"miscs.0","t":"misc"},"Watchers":{"p":"miscs.0.miscs.0","t":"misc"},"Commands reference":{"p":"miscs.0.miscs.1","t":"misc"},"Execution control":{"p":"miscs.0.miscs.1.modules.0","t":"module"},"Various":{"p":"miscs.0.miscs.1.modules.1","t":"module"},"Advanced Usage":{"p":"miscs.0.miscs.2","t":"misc"}},"child_process.json":{"Child Process":{"p":"modules.0","t":"module"},"Class: ChildProcess":{"p":"modules.0.classes.0","t":"class"},"Event:  'exit'":{"p":"modules.0.classes.0.events.0","t":"event"},"Event: 'close'":{"p":"modules.0.classes.0.events.1","t":"event"},"Event: 'disconnect'":{"p":"modules.0.classes.0.events.2","t":"event"},"Event: 'message'":{"p":"modules.0.classes.0.events.3","t":"event"},"`stdin` {Stream object} ":{"p":"modules.0.classes.0.properties.0"},"`stdout` {Stream object} ":{"p":"modules.0.classes.0.properties.1"},"`stderr` {Stream object} ":{"p":"modules.0.classes.0.properties.2"},"`pid` {Integer} ":{"p":"modules.0.classes.0.properties.3"},"child.kill([signal])":{"p":"modules.0.classes.0.methods.0","t":"method"},"`signal` {String} ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.0","t":"String"},"child.send(message, [sendHandle])":{"p":"modules.0.classes.0.methods.1","t":"method"},"`message` {Object} ":{"p":"modules.0.classes.0.methods.1.signatures.0.params.0","t":"Object"},"`sendHandle` {Handle object} ":{"p":"modules.0.classes.0.methods.1.signatures.0.params.1","t":"Handle object"},"child.disconnect()":{"p":"modules.0.classes.0.methods.2","t":"method"},"child_process.spawn(command, [args], [options])":{"p":"modules.0.methods.0","t":"method"},"return: {ChildProcess object} ":{"p":"modules.0.methods.0.signatures.0.return","t":"ChildProcess object"},"`command` {String} The command to run ":{"p":"modules.0.methods.0.signatures.0.params.0","t":"String"},"`args` {Array} List of string arguments ":{"p":"modules.0.methods.3.signatures.0.params.1","t":"Array"},"`options` {Object} ":{"p":"modules.0.methods.3.signatures.0.params.2","t":"Object"},"`cwd` {String} Current working directory of the child process ":{"p":"modules.0.methods.3.signatures.0.params.2.options.0","t":"String"},"`stdio` {Array|String} Child's stdio configuration. (See below) ":{"p":"modules.0.methods.0.signatures.0.params.2.options.1","t":"Array|String"},"`customFds` {Array} **Deprecated** File descriptors for the child to use for stdio.  (See below) ":{"p":"modules.0.methods.0.signatures.0.params.2.options.2","t":"Array"},"`env` {Object} Environment key-value pairs ":{"p":"modules.0.methods.3.signatures.0.params.2.options.1","t":"Object"},"`detached` {Boolean} The child will be a process group leader.  (See below) ":{"p":"modules.0.methods.0.signatures.0.params.2.options.4","t":"Boolean"},"child_process.exec(command, [options], callback)":{"p":"modules.0.methods.1","t":"method"},"Return: ChildProcess object ":{"p":"modules.0.methods.3.signatures.0.return"},"`command` {String} The command to run, with space-separated arguments ":{"p":"modules.0.methods.1.signatures.0.params.0","t":"String"},"`stdio` {Array|String} Child's stdio configuration. (See above) ":{"p":"modules.0.methods.2.signatures.0.params.2.options.1","t":"Array|String"},"`customFds` {Array} **Deprecated** File descriptors for the child to use for stdio.  (See above) ":{"p":"modules.0.methods.2.signatures.0.params.2.options.2","t":"Array"},"`encoding` {String} (Default: 'utf8') ":{"p":"modules.0.methods.3.signatures.0.params.2.options.2","t":"String"},"`timeout` {Number} (Default: 0) ":{"p":"modules.0.methods.3.signatures.0.params.2.options.3","t":"Number"},"`maxBuffer` {Number} (Default: 200*1024) ":{"p":"modules.0.methods.1.signatures.0.params.1.options.6","t":"Number"},"`killSignal` {String} (Default: 'SIGTERM') ":{"p":"modules.0.methods.2.signatures.0.params.2.options.7","t":"String"},"`callback` {Function} called with the output when process terminates ":{"p":"modules.0.methods.2.signatures.0.params.3","t":"Function"},"`error` {Error} ":{"p":"modules.0.methods.2.signatures.0.params.3.options.0","t":"Error"},"`stdout` {Buffer} ":{"p":"modules.0.methods.2.signatures.0.params.3.options.1","t":"Buffer"},"`stderr` {Buffer} ":{"p":"modules.0.methods.2.signatures.0.params.3.options.2","t":"Buffer"},"child_process.execFile(file, args, options, callback)":{"p":"modules.0.methods.2","t":"method"},"`file` {String} The filename of the program to run ":{"p":"modules.0.methods.2.signatures.0.params.0","t":"String"},"`maxBuffer` {Number} (Default: 200\\*1024) ":{"p":"modules.0.methods.2.signatures.0.params.2.options.6","t":"Number"},"child\\_process.fork(modulePath, [args], [options])":{"p":"modules.0.methods.3","t":"method"},"`modulePath` {String} The module to run in the child ":{"p":"modules.0.methods.3.signatures.0.params.0","t":"String"}},"cluster.json":{"Cluster":{"p":"modules.0","t":"module"},"How It Works":{"p":"modules.0.miscs.0","t":"misc"},"`settings` {Object} ":{"p":"modules.0.methods.0.signatures.0.params.0","t":"Object"},"`exec` {String} file path to worker file.  (Default=`__filename`) ":{"p":"modules.0.methods.0.signatures.0.params.0.options.0","t":"String"},"`args` {Array} string arguments passed to worker. (Default=`process.argv.slice(2)`) ":{"p":"modules.0.methods.0.signatures.0.params.0.options.1","t":"Array"},"`silent` {Boolean} whether or not to send output to parent's stdio. (Default=`false`) ":{"p":"modules.0.methods.0.signatures.0.params.0.options.2","t":"Boolean"},"`isMaster` {Boolean} ":{"p":"modules.0.properties.1"},"`isWorker` {Boolean} ":{"p":"modules.0.properties.2"},"`exec` {String} file path to worker file.  Default: `__filename` ":{"p":"modules.0.properties.3.options.0","t":"String"},"`workers` {Object} ":{"p":"modules.0.properties.4"},"Event: 'fork'":{"p":"modules.0.events.0","t":"event"},"Event: 'online'":{"p":"modules.0.classes.0.events.1","t":"event"},"Event: 'listening'":{"p":"modules.0.classes.0.events.2","t":"event"},"Event: 'disconnect'":{"p":"modules.0.classes.0.events.3","t":"event"},"Event: 'exit'":{"p":"modules.0.classes.0.events.4","t":"event"},"Event: 'setup'":{"p":"modules.0.events.5","t":"event"},"cluster.setupMaster([settings])":{"p":"modules.0.methods.0","t":"method"},"cluster.fork([env])":{"p":"modules.0.methods.1","t":"method"},"return {Worker object} ":{"p":"modules.0.methods.1.signatures.0.return","t":"Worker object"},"`env` {Object} Key/value pairs to add to child process environment. ":{"p":"modules.0.methods.1.signatures.0.params.0","t":"Object"},"cluster.disconnect([callback])":{"p":"modules.0.methods.2","t":"method"},"`callback` {Function} called when all workers are disconnected and handlers are closed ":{"p":"modules.0.methods.2.signatures.0.params.0","t":"Function"},"Class: Worker":{"p":"modules.0.classes.0","t":"class"},"`id` {String} ":{"p":"modules.0.classes.0.properties.0"},"`process` {ChildProcess object} ":{"p":"modules.0.classes.0.properties.1"},"`suicide` {Boolean} ":{"p":"modules.0.classes.0.properties.2"},"worker.send(message, [sendHandle])":{"p":"modules.0.classes.0.methods.0","t":"method"},"`message` {Object} ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.0","t":"Object"},"`sendHandle` {Handle object} ":{"p":"modules.0.classes.0.methods.0.signatures.0.params.1","t":"Handle object"},"worker.destroy()":{"p":"modules.0.classes.0.methods.1","t":"method"},"worker.disconnect()":{"p":"modules.0.classes.0.methods.2","t":"method"},"Event: 'message'":{"p":"modules.0.classes.0.events.0","t":"event"}}}